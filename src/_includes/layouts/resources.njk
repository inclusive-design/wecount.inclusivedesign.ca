{% extends 'layouts/base.njk' %}

{% block content %}
  {# TODO: dedupe this declaration #}
  <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="placeholder" viewBox="-4 -4 224 224">
      {% include 'svg/placeholder.svg' %}
    </symbol>
    <symbol id="arrowup" viewBox="0 0 39 23">
      {% include 'svg/arrowup.svg' %}
    </symbol>
    <symbol id="arrowdown" viewBox="0 0 39 24">
      {% include 'svg/arrowdown.svg' %}
    </symbol>
    <symbol id="apply" viewBox="0 0 26 26" fill="none">
      {% include 'svg/apply.svg' %}
    </symbol>
    <symbol id="reset" viewBox="0 0 26 26" fill="none">
      {% include 'svg/reset.svg' %}
    </symbol>

    {# for the tile items #}
    <symbol id="media-type" viewBox="0 0 16 16">
      {% include 'svg/media-type.svg' %}
    </symbol>
    <symbol id="readability" viewBox="0 0 18 18">
      {% include 'svg/readability.svg' %}
    </symbol>
    <symbol id="tags" viewBox="0 0 19 17">
      {% include 'svg/tags.svg' %}
    </symbol>
    <symbol id="topics" viewBox="0 0 15 15">
      {% include 'svg/topics.svg' %}
    </symbol>
    <symbol id="aiAndDisability" viewBox="0 0 117 103">
      {% include 'svg/topic-ai-and-disability.svg' %}
    </symbol>
    <symbol id="aiEthics" viewBox="0 0 107 99">
      {% include 'svg/topic-ai-fairness-ethics-and-policy.svg' %}
    </symbol>
    <symbol id="designAndMethods" viewBox="0 0 112 104">
      {% include 'svg/topic-technical-information.svg' %}
    </symbol>
    <symbol id="dataScience" viewBox="0 0 101 99">
      {% include 'svg/topic-work-for-pwd-in-data-science.svg' %}
    </symbol>
    <symbol id="ictStandards" viewBox="0 0 123 117">
      {% include 'svg/ict-standards.svg' %}
    </symbol>
  </svg>

  <article class="resources static-view">
    <h1>{{ title }}</h1>
    {{ content | safe }}

    <form method="get" action="/resources/">
      {# TODO: review the language used for search instruction and labelling #}
      {% set placeholderForSearch = "Search resources..." %}
      {% set ariaLabelForSearch = "Enter keywords for a search in resources" %}
      {% include 'components/search-container.njk' %}

      {% set filterHeading = "Filters" %}
      {% set topicsFilterTitle = "Topics" %}
      {% set topicsFilterClearLabel = "Clear all topics" %}
      {% set tagsFilterTitle = "Tags" %}
      {% set tagsFilterClearLabel = "Clear all tags" %}
      {% set typesFilterTitle = "Media Types" %}
      {% set typesFilterClearLabel = "Clear all media types" %}
      {% set filterAction = "/resources/" %}
      {% include 'components/filter-resources.njk' %}
    </form>

    <div class="api-content">
      {% for item in pagination.items %}
        {% set tileURL = item.url %}
        {% set title = item.data.title %}
        {% set source = item.data.source %}
        {% set mediaType = item.data.type %}
        {% set readabilityList = item.data.readability %}
        {% set focus = item.data.focus %}
        {% set tags = item.data.learnTags %}
        {% set summary = item.data.summary %}
        {% include "components/tile-item-resource.njk" %}
      {% endfor %}
    </div>

    {% if pagination.pages.length > 1 %}
      {% include 'components/pagination.njk' %}
    {% endif %}
  </article>

  {# For displaying dynamic search and filtering results #}
  <article class="resources dynamic-view">
    <h1>{{ title }}</h1>
    {{ content | safe }}

    <form method="get" action="/resources/">
      {# TODO: add :value to the search-container template and use template here #}
      {# Search #}
      <div class="search-container">
        <svg><use xlink:href="#search" /></svg>
        <input type="search" name="s" :value="searchTerm" placeholder="Search resources..." aria-label="Enter keywords for a search in resources">
      </div>

      {# Resources filter #}
      <div class="filter">
        <h2>{{ filterHeading }}</h2>
        {# Topic selections #}
        {# TODO: Dedupe this control. #}
        {# Note: The dedupe is impossible for now because nunjucks syntax such as including a sub-template is not
        supported in a vue syntax template. This may become possible when eleventy supports Vue templates. #}
        <div class="filter-header">
          <h3>{{ topicsFilterTitle }}</h3>
          <button type="button" class="filter-expand-button" data-section="topics" aria-expanded="true" aria-label="expand or collapse the topics filter">
            <svg class="arrowdown" aria-label="hidden"><use xlink:href="#arrowdown" /></svg>
            <svg class="arrowup" aria-label="hidden"><use xlink:href="#arrowup" /></svg>
          </button>
        </div>

        <div class="filter-body" data-section="topics">
          <ul class="topic-choices">
              <li v-for="category in resourceCategories">
                <div class="topic-title" :class="category.categoryId">
                  <span :id="'title_' + category.categoryId">{{ '{{ category.categoryLabel }}' }}</span>
                  <svg><use :xlink:href="'#' + category.categoryId" /></svg>
                </div>
                <div class="topic-checkbox">
                  <input class="filter-checkbox" :aria-labelledby="'title_' + category.categoryId" type="checkbox" v-model="category.checked" :id="category.categoryId" :name="'c_' + category.categoryId">
                  <span role="presentation"></span>
                </div>
              </li>
          </ul>
          <div class="filter-clear">
            <button type="button">{{ topicsFilterClearLabel }}</button>
          </div>
        </div>

        {# Tag selections #}
        {# TODO: Dedupe this control #}
        <div class="filter-header">
          <h3>{{ tagsFilterTitle }}</h3>
          <button type="button" class="filter-expand-button" data-section="tags" aria-expanded="true" aria-label="expand or collapse the tags filter">
            <svg class="arrowdown" aria-label="hidden"><use xlink:href="#arrowdown" /></svg>
            <svg class="arrowup" aria-label="hidden"><use xlink:href="#arrowup" /></svg>
          </button>
        </div>

        <div class="filter-body" data-section="tags">
          <ul class="filter-choices">
            <li v-for="tag in tags">
              <input class="filter-checkbox" type="checkbox" v-model="tag.checked" :id="tag.value" :name="'t_' + tag.value">
              <label :for="tag.value">{{ '{{ tag.label }}' }}</label>
            </li>
          </ul>
          <div class="filter-clear">
            <button type="button">{{ tagsFilterClearLabel }}</button>
          </div>
        </div>

        {# Media Type selections #}
        {# TODO: Dedupe this control #}
        <div class="filter-header">
          <h3>{{ typesFilterTitle }}</h3>
          <button type="button" class="filter-expand-button" data-section="mediatypes" aria-expanded="true" aria-label="expand or collapse the media types filter">
            <svg class="arrowdown" aria-label="hidden"><use xlink:href="#arrowdown" /></svg>
            <svg class="arrowup" aria-label="hidden"><use xlink:href="#arrowup" /></svg>
          </button>
        </div>

        <div class="filter-body" data-section="mediatypes">
          <ul class="filter-choices">
            <li v-for="mediaType in resourceTypes">
              <input class="filter-checkbox" type="checkbox" v-model="mediaType.checked" :id="mediaType.value" :name="'m_' + mediaType.value">
              <label :for="mediaType.value">{{ '{{ mediaType.value }}' }}</label>
            </li>
          </ul>
          <div class="filter-clear">
            <button type="button">{{ typesFilterClearLabel }}</button>
          </div>
        </div>

        <div class="filter-buttons">
          <button class="apply-button" type="submit">
            <svg><use xlink:href="#apply" /></svg><span>Apply Filters</span>
          </button>
          <button class="reset-button" type="button">
            <svg><use xlink:href="#reset" /></svg><span>Reset Filters</span>
          </button>
        </div>
      </div>
    </form>

    <h3 role="status" class="search-result" v-if="searchResult">{{ '{{ searchResult }}' }}</h3>

    <div class="search-term-container" v-if="searchTerm">
      <h4 class="search-for-title">Search Term:</h4>
      <p class="search-term">“{{ '{{ searchTerm }}' }}”</p>
    </div>

    <div class="api-content" v-if="resultsToDisplay.length > 0">
      <a v-for="item in resultsToDisplay" :key="item.id" :href="item.url">
        <div class="tile-item">
          <div class="tile-resource">
            <h2 class="h3">{{ '{{ item.title }}' }}</h2>
            <div class="info">
              <svg aria-hidden="true"><use xlink:href="#media-type" /></svg>
              Media Type: {{ '{{ item.type }}' }}
            </div>

            <div class="info" v-if="item.readability">
              <svg aria-hidden="true"><use xlink:href="#readability" /></svg>
              <span class="resource-readability-title">Readability:&MediumSpace;</span>
              <ul class="resource-readability-list">
                <li v-for="(readabilityLevel, index) in item.readability">
                  {{ '{{ readabilityLevel }}' }}{#
                  #}<span v-if="index < item.readability.length - 1">,&MediumSpace;</span>
                </li>
              </ul>
            </div>

            <div class="info">
              <svg aria-hidden="true"><use xlink:href="#topics" /></svg>
              Topic:
              <span v-if="resourceCategories.filter(cat => cat.focuses.includes(item.focus))[0]">{{ '{{ resourceCategories.filter(cat => cat.focuses.includes(item.focus))[0].categoryLabel }}' }}</span>
              <span v-else>{{ '{{ item.focus }}' }}</span>
            </div>

            <div class="info" v-if="item.learnTags">
              <svg aria-hidden="true"><use xlink:href="#tags" /></svg>
              Tags:
              <ul class="resource-tags-list">
                <li v-for="(tag, key, index) in item.learnTags">
                  {{ '{{ tags.filter(singleTag => singleTag.value === tag)[0].label }}' }}
                </li>
              </ul>
            </div>

          </div>
        </div>
      </a>
    </div>

    {# TODO: The pagination layout below can go into a sharable vue template script
    when https://github.com/11ty/eleventy-plugin-vue is released #}
    <nav v-if="pagination" class="pagination" aria-label="pagination">
      <ul class="pagination-list">
        <li>
          <a v-if="pagination.href.previous" :href="pagination.href.previous" class="pagination-previous">
            <svg><use xlink:href="#previous" /></svg>
            <span class="screen-reader-only">previous</span>
          </a>
        </li>
        <li v-if="pagination.pageNumber > 1">
          <a :href="pagination.href.first" class="pagination-link">1</a>
        </li>
        <li v-if="pagination.pageNumber > 2" class="pagination-ellipsis">
          <span>&hellip;</span>
        </li>

        <li v-if="pagination.pageNumber > 0" v-bind:class="{'hide-on-mobile': pagination.hideProceedingPageButton}">
          <a :href="pagination.href.previous" class="pagination-link">
            {{ '{{ pagination.pageNumber }}' }}
          </a>
        </li>

        <li>
          <a :href="pagination.hrefs[pagination.pageNumber]" class="pagination-link is-current" aria-current="page">
            {{ '{{ pagination.pageNumber + 1 }}' }}
          </a>
        </li>

        <li v-if="pagination.pageNumber < pagination.pages.length - 2" v-bind:class="{'hide-on-mobile': pagination.hideFollowingPageButton}">
          <a :href="pagination.hrefs[pagination.pageNumber + 1]" class="pagination-link">
            {{ '{{ pagination.pageNumber + 2 }}' }}
          </a>
        </li>

        <li v-if="pagination.pageNumber < pagination.pages.length - 3" class="pagination-ellipsis">
          <span>&hellip;</span>
        </li>
        <li v-if="pagination.pageNumber < pagination.pages.length - 1">
          <a :href="pagination.href.last" class="pagination-link">
            {{ '{{ pagination.pages.length }}' }}
          </a>
        </li>
        <li>
          <a v-if="pagination.href.next" :href="pagination.href.next" class="pagination-next">
            <svg><use xlink:href="#next" /></svg>
            <span class="screen-reader-only">next</span>
          </a>
        </li>
      </ul>
    </nav>
  </article>
{% endblock %}

{% block headerScripts %}
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.11"></script>
{% endblock %}

{% block footerScripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>
<script src="/assets/scripts/utils.js"></script>
<script src="/assets/scripts/resources-dynamic-handler.js"></script>
{% endblock %}
